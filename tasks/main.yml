---
  - name: add backport
    apt_repository:
      repo: "deb http://ftp.debian.org/debian jessie-backports main"
      state: present
      update_cache: yes
    become: yes
    tags:
      - packages

  - name: add backports key
    apt_key:
      keyserver: pgpkeys.mit.edu
      id: 8B48AD6246925553
    become: yes
    tags:
      - packages

  - name: add backports key
    apt_key:
      keyserver: pgpkeys.mit.edu
      id: 7638D0442B90D010
    become: yes
    tags:
      - packages

  - name: install packages
    apt:
      name: '{{ item }}'
      state: latest
      default_release: "jessie-backports"
      force: yes
    become: yes
    with_items: ['certbot']
    tags:
      - packages

  - name: create letsencrypt config directory
    file:
      path: /etc/letsencrypt
      state: directory
    become: yes
    tags:
      - packages

  - name: Set up letsencrypt config file
    template:
      src:  letsencrypt.j2
      dest: /etc/letsencrypt/cli.ini
    become: yes
    tags:
      - configuration

  - name: get certificates
    command: certbot --standalone certonly -n --keep -c /etc/letsencrypt/cli.ini
    when: letsencrypt_staging is undefined
    become: yes
    tags:
      - configuration

  - name: get certificates from staging
    command: certbot --staging --standalone certonly -n --keep -c /etc/letsencrypt/cli.ini
    when: letsencrypt_staging is defined
    become: yes
    tags:
      - configuration

  - name: add ssl-cert group
    group:
      name: ssl-cert
      state: present
      system: yes
    become: yes
    tags:
      - packages

  - name: set permissions on /etc/letsencrypt so ssl-certs group members can get access
    file:
      path: /etc/letsencrypt
      state: directory
      recurse: yes
      group: ssl-cert
      mode: g=rx
    become: yes
    tags:
      - configuration

  - name: check to see if nginx is installed to make sure we stop/start with the cron job
    stat:
      path: /etc/init.d/nginx
    register: nginx_installed
    tags:
      - configuration

  - name: create cron vars
    set_fact:
      nginx_pre: ""
      nginx_post: ""
    tags:
      - configuration

  - name: configure cron vars based on presence of nginx
    set_fact:
      nginx_pre: "/etc/init.d/nginx stop && "
      nginx_post: " && /etc/init.d/nginx start"
    when: nginx_installed.stat.exists
    tags:
      - configuration

  - name: add cert renewal cron job
    cron:
      name: "renew cert"
      cron_file: letsencrypt
      user: root
      month: "*"
      day: "*"
      hour: "*/12"
      minute: "5"
      job: "{{ nginx_pre }}/usr/bin/certbot renew{{ nginx_post }} && chgrp -R ssl-cert /etc/letsencrypt && chmod -R g=rX /etc/letsencrypt"
      state: present
    become: yes
    tags:
      - configuration
